13. (Payroll System Modification)
Modify the payroll system of Figs 10.4 - 10.9 to include 'private' instance variable 'birthDate' in class 'Employee'.

Use class 'Date' of Fig 8.7 to represent an employee's birthday.
add 'get' method to class 'Date'.

Assume that payroll is processed once per month.
Create an array of 'Employee' variable to store references to the various employee objects.

In a loop, calculate the payroll for each Employee (polymorphically), and add $100.00 bonus to the person's payroll amount if the current month is the one in which the 'Employee's birthday occurs.

    Add Birthday method to the Employee Class
    Inherit throughout
    "get" methods needed for Fig 8.7






15 (Payroll System Modification)
Modify the payroll system of Figs 10.4 - 10.9 to include an additional 'Employee' subclass 'PieceWorker' that represents an employee whose pay is based on the number of pieces of merchandise produced.

Class 'PieceWorker' should contain a 'private' instance variable 'wage' (to store the employee's wage per piece) and 'pieces' (to store the number of pieces produced).

Provide a concrete implementation of method 'earnings' in class 'PieceWOrker' that calculates the employee's earnings by multiplying the number of pieces produced by the wage per piece.

Create an empty array of 'Employee' variables to store future references to objects of each concrete class of the new 'Employee' hierarchy.

For each 'Employee', display it's 'String' representation and earnings


for Payroll System modifications you should do the following:
    Piece Worker Class
    Subclass of Employee
    Wage
    Pieces
    instance variables
    Constructor
    getters
    setters
    override earnings method
    override the toString() method


